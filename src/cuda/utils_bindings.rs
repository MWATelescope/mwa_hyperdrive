/* automatically generated by rust-bindgen 0.60.1 */

extern "C" {
    #[doc = " Given a `cudaError_t` cast as an int, return the address of a CUDA error"]
    #[doc = " string."]
    pub fn get_cuda_error(cuda_error_id: ::std::os::raw::c_int) -> *const ::std::os::raw::c_char;
}
extern "C" {
    #[doc = " A \"watered-down\" version of the CUDA example \"deviceQuery\"."]
    #[doc = ""]
    #[doc = " See the full example at:"]
    #[doc = "https://github.com/NVIDIA/cuda-samples/blob/master/Samples/1_Utilities/deviceQuery/deviceQuery.cpp"]
    #[doc = ""]
    #[doc = " As this code contains code derived from an official NVIDIA example, legally,"]
    #[doc = " a copyright, list of conditions and disclaimer must be distributed with this"]
    #[doc = " code. This should be found in the root of the mwa_hyperdrive git repo, file"]
    #[doc = " LICENSE-NVIDIA."]
    pub fn get_cuda_device_info(
        device: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        device_major: *mut ::std::os::raw::c_int,
        device_minor: *mut ::std::os::raw::c_int,
        total_global_mem: *mut usize,
        driver_version: *mut ::std::os::raw::c_int,
        runtime_version: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
